<!DOCTYPE html>
<html>
<head>
  <title>ZaraFix Admin Dashboard</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <style>
    body {
      font-family: Arial, sans-serif;
      background: linear-gradient(to right, #f8f9fa, #e0f7fa);
      padding: 10px;
    }
    h2 {
      text-align: center;
      color: #333;
    }
    .card {
      background: white;
      border-radius: 20px;
      box-shadow: 0 8px 16px rgba(0,0,0,0.2);
      padding: 15px;
      margin: 15px auto;
      max-width: 500px;
    }
    .btn {
      padding: 10px 20px;
      margin-top: 10px;
      font-weight: bold;
      color: white;
      border: none;
      border-radius: 10px;
      cursor: pointer;
      box-shadow: 0 4px 6px rgba(0,0,0,0.3);
      transition: 0.3s;
    }
    .approve { background: #4CAF50; }
    .delete { background: #f44336; }
    .recharge { background: #2196F3; }
    .btn:hover { opacity: 0.8; }
  </style>
</head>
<body>
  <h2>üõ†Ô∏è ZaraFix Admin Dashboard</h2>

  <div id="posterCards"></div>
  <div id="requestCards"></div>
  <div id="rechargeCards"></div>

  <script type="module">
    import { initializeApp } from "https://www.gstatic.com/firebasejs/10.12.2/firebase-app.js";
    import { getDatabase, ref, get, update, remove } from "https://www.gstatic.com/firebasejs/10.12.2/firebase-database.js";

    const firebaseConfig = {
      apiKey: "",
      authDomain: "",
      databaseURL: "",
      projectId: "",
      storageBucket: "",
      messagingSenderId: "",
      appId: ""
    };

    const app = initializeApp(firebaseConfig);
    const db = getDatabase(app);

    const posterDiv = document.getElementById('posterCards');
    const requestDiv = document.getElementById('requestCards');
    const rechargeDiv = document.getElementById('rechargeCards');

    function createCard(title, content, buttons=[]) {
      const card = document.createElement('div');
      card.className = 'card';
      card.innerHTML = `<h3>${title}</h3><div>${content}</div>`;
      buttons.forEach(btn => card.appendChild(btn));
      return card;
    }

    async function loadDashboard() {
      const snapshot = await get(ref(db));
      const data = snapshot.val();

      // Posters
      for (const uid in data.posters) {
        const p = data.posters[uid];
        const content = `Name: ${p.name}<br>Shop: ${p.shop}<br>Category: ${p.category}<br>Wallet: ‚Çπ${p.wallet}<br>WhatsApp: ${p.whatsapp}`;
        const approveBtn = document.createElement('button');
        approveBtn.innerText = 'Approve';
        approveBtn.className = 'btn approve';
        approveBtn.onclick = () => update(ref(db, `admins/${uid}`), true);

        const deleteBtn = document.createElement('button');
        deleteBtn.innerText = 'Delete';
        deleteBtn.className = 'btn delete';
        deleteBtn.onclick = () => remove(ref(db, `posters/${uid}`));

        posterDiv.appendChild(createCard(`Poster: ${p.name}`, content, [approveBtn, deleteBtn]));
      }

      // Requests
      for (const userId in data.requests) {
        for (const reqId in data.requests[userId]) {
          const r = data.requests[userId][reqId];
          const acceptList = r.acceptedBy ? Object.keys(r.acceptedBy).map(uid => data.posters[uid]?.name || uid).join(', ') : 'None';
          const content = `User: ${r.name}<br>Category: ${r.category}<br>Problem: ${r.problem}<br>Status: ${r.status}<br>Accepted By: ${acceptList}<br>Time: ${new Date(r.timestamp).toLocaleString()}`;
          const delBtn = document.createElement('button');
          delBtn.innerText = 'Delete';
          delBtn.className = 'btn delete';
          delBtn.onclick = () => remove(ref(db, `requests/${userId}/${reqId}`));
          requestDiv.appendChild(createCard(`Request: ${r.name}`, content, [delBtn]));
        }
      }

      // Recharge Requests
      for (const uid in data.recharge) {
        const rec = data.recharge[uid];
        if (rec.status === 'pending') {
          const content = `User ID: ${uid}<br>Amount: ‚Çπ${rec.amount}<br>Time: ${new Date(rec.timestamp).toLocaleString()}<br><img src="${rec.screenshot}" width="100%">`;
          const approveBtn = document.createElement('button');
          approveBtn.innerText = 'Approve Recharge';
          approveBtn.className = 'btn recharge';
          approveBtn.onclick = async () => {
            await update(ref(db, `posters/${uid}/wallet`), (data.posters[uid]?.wallet || 0) + 100);
            await update(ref(db, `recharge/${uid}`), { status: 'approved' });
            alert('Recharge Approved');
            location.reload();
          };
          rechargeDiv.appendChild(createCard(`Recharge Request`, content, [approveBtn]));
        }
      }
    }

    loadDashboard();
  </script>
</body>
</html>
