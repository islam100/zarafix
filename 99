<!DOCTYPE html>
<html>
<head>
  <title>ZaraFix - Poster Dashboard</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #e3f2fd;
      margin: 0;
      padding: 20px;
    }

    h2 {
      text-align: center;
      color: #0d47a1;
    }

    #jobList {
      display: flex;
      flex-direction: column;
      gap: 20px;
      margin-top: 20px;
    }

    .card {
      background: #ffffff;
      border-radius: 15px;
      box-shadow: 0 10px 20px rgba(0,0,0,0.2);
      padding: 20px;
      transition: 0.3s;
    }

    .card:hover {
      transform: scale(1.01);
    }

    button {
      padding: 10px 20px;
      margin-top: 10px;
      border: none;
      border-radius: 10px;
      background: #1976d2;
      color: white;
      font-weight: bold;
      cursor: pointer;
    }

    button:hover {
      background: #0d47a1;
    }

    .whatsapp, .map {
      display: inline-block;
      margin-right: 10px;
    }

    .wallet {
      position: fixed;
      top: 10px;
      right: 10px;
      background: #fff;
      padding: 10px 20px;
      border-radius: 10px;
      box-shadow: 0 5px 10px rgba(0,0,0,0.2);
    }
  </style>
</head>
<body>

<h2>üõ†Ô∏è Poster Dashboard</h2>
<div class="wallet">Wallet: ‚Çπ<span id="wallet">0</span></div>
<div id="jobList"></div>

<script src="https://www.gstatic.com/firebasejs/9.6.1/firebase-app.js"></script>
<script src="https://www.gstatic.com/firebasejs/9.6.1/firebase-auth.js"></script>
<script src="https://www.gstatic.com/firebasejs/9.6.1/firebase-database.js"></script>

<script>
  const firebaseConfig = {
    apiKey: "AIzaSyD7ZqL-PVuFdd8rMVIyW7CgHQjPRGHD2h8",
    authDomain: "zara-fix-2e35a.firebaseapp.com",
    projectId: "zara-fix-2e35a",
    storageBucket: "zara-fix-2e35a.appspot.com",
    messagingSenderId: "636550144008",
    appId: "1:636550144008:web:a849496ad1d1557d7ab1bd"
  };

  const app = firebase.initializeApp(firebaseConfig);
  const auth = firebase.auth();
  const db = firebase.database();

  let currentUser, posterCategory, wallet = 0;

  auth.onAuthStateChanged(async (user) => {
    if (!user) {
      alert("Please login first.");
      window.location.href = "index.html";
      return;
    }

    currentUser = user;
    const posterSnap = await db.ref("posters/" + user.uid).once("value");
    const posterData = posterSnap.val();

    if (!posterData) {
      alert("Registration not found. Please register first.");
      return;
    }

    posterCategory = posterData.category || "";
    wallet = posterData.wallet || 0;
    document.getElementById("wallet").innerText = wallet;

    loadJobs();
  });

  function loadJobs() {
    db.ref("requests").on("value", (snap) => {
      const jobList = document.getElementById("jobList");
      jobList.innerHTML = "";
      const now = Date.now();

      snap.forEach((userSnap) => {
        const userId = userSnap.key;
        userSnap.forEach((jobSnap) => {
          const job = jobSnap.val();
          const jobKey = jobSnap.key;

          // Job must match category
          if (job.category !== posterCategory) return;

          // Job should be less than 36 hours old
          if (now - job.timestamp > 129600000) return;

          const accepted = job.acceptedBy && job.acceptedBy.includes(currentUser.uid);
          const acceptedByCount = job.acceptedBy ? job.acceptedBy.length : 0;

          const card = document.createElement("div");
          card.className = "card";
          card.innerHTML = `
            <strong>üßæ Problem:</strong> ${job.problem}<br>
            <strong>üìç Address:</strong> ${job.address}<br>
            <strong>üìû User Name:</strong> ${job.name}<br>
            <strong>üõ†Ô∏è Category:</strong> ${job.category}<br>
            <strong>‚úÖ Accepted By:</strong> ${acceptedByCount}<br>
            ${accepted ? `
              <div class="whatsapp"><a href="https://wa.me/91${job.whatsapp}" target="_blank"><button>üì≤ WhatsApp</button></a></div>
              <div class="map"><a href="https://www.google.com/maps?q=${job.lat},${job.lng}" target="_blank"><button>üìç Live Map</button></a></div>
            ` : `<button onclick="acceptJob('${userId}','${jobKey}')">‚úÖ Accept</button>`}
          `;
          jobList.appendChild(card);
        });
      });
    });
  }

  async function acceptJob(userId, jobKey) {
    if (wallet < 20) {
      alert("You need ‚Çπ20 in wallet to accept.");
      return;
    }

    const jobRef = db.ref("requests/" + userId + "/" + jobKey);
    const jobSnap = await jobRef.once("value");
    const job = jobSnap.val();

    if (!job) return;

    const acceptedBy = job.acceptedBy || [];
    if (!acceptedBy.includes(currentUser.uid)) {
      acceptedBy.push(currentUser.uid);
      await jobRef.update({ acceptedBy });
      wallet -= 20;
      await db.ref("posters/" + currentUser.uid).update({ wallet });
      document.getElementById("wallet").innerText = wallet;
    }
  }
</script>

</body>
</html>
